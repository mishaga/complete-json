name: CI/CD


on:
  push


jobs:

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python & Poetry
        uses: mishaga/action-poetry@1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: poetry install --no-root

      - name: Run isort
        run: poetry run isort . --check-only

      - name: Run ruff check
        run: poetry run ruff check

      - name: Run ruff format
        run: poetry run ruff format --check


  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python & Poetry
        uses: mishaga/action-poetry@1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: poetry install --no-root

      - name: Testing code with pytest
        run: poetry run pytest -v



  build-doc:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - lint
      - test
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python & Poetry
        uses: mishaga/action-poetry@1
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: poetry install --no-root

      - name: Generate documentation
        run: |
          mkdir docs
          poetry run pdoc -o docs/ -d google --no-search --no-show-source complete_json

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/


  deploy-doc:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: build-doc
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Documentation deployment
        id: deployment
        uses: actions/deploy-pages@v4
